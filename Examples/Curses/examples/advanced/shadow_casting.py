"""
Use arrow keys to move camera.
"""
import asyncio
from itertools import cycle

import numpy as np

from nurses_2.app import run_widget_as_app
from nurses_2.colors import gradient, WHITE, BLUE, ACYAN, AMAGENTA
from nurses_2.io import MouseEventType
from nurses_2.widgets.shadow_caster import (
    AGRAY,
    Camera,
    Point,
    LightIntensity,
    LightSource,
    ShadowCaster,
)
MAP = """
1111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1000000000000000011000000000000000000000000000000000000000000000000000000000000000001
1001000000000000001100000000000000000000000000000000000000000000000000000000000000001
1001001000000011111111111100000000000002222220000000000000000000000000000000000000001
1001001000000011111111111100000000000000222200000000011000011001100000000000000000001
1000000100000000000000000000000000000000222000000000011000011001100000000000000000001
1110000100000000000001000000000002220000220000000000000000000000000000000000000000001
1000000000011100011001000000000002220000000000000000000000000000000000000000010000001
1000000000011100011001000000000022200000000000000000000000000000001111111111110000001
1000000000011100000001000000022222222220000002222220000000000000000000000000010000001
1110000000000000000001000000000000000000000001100000000000000000000000000000010000001
1110010000000000000000000000000000000000000001100000000000000000000000000000010011001
1110010000000111111100000000000000000000000001100000000000100000000000000000010011001
1000010000000111111100000000000000000000000000000011111111100000000111111111110011001
1110010001111111111100000000000000000000000000000010000000000000000000000000010000001
1110010001111111111100000000022200222222000000000010000000000000011110000000010000001
1000010001111111111100000000010000000001000000000010000000000000111000000000010000001
1000010001100100110100000000010000000001000111111110000000000000001110000000010000001
1000010000000000100100000000010000000001000100000000001100000000111000000000010000001
1000010000000000000000000000010000000001000100000000011000000000001100000000010000001
1000010000000000000000000000010000000001000100000000110000000000111000000000010000001
1000011111111111111111111111110000000001111100000011000000000000011100000111111111111
1000000110000000000000000000000000000000000000000011000000000001111000000000000000001
1000000110000000000000000000000000000000000000000001100000000000011100000000000000001
1000000011000000000000000000000000000000022222000000111000000000001110000000000000001
1000000001100000001111111110000000000000002222200000001000000000011100000000000000001
2000000022000000000000222222222200000000000222000000002000000000000000000000000000002
2000000002200002220000000002222222200000000020000000002000000000000000000000000000002
2000000022000000022220000000000022222222200000000000002000000000022222222222000000002
2000000002200000000222200000000000022222220000000000002000000000020000000002000000002
2000000000220000000000220022000000000022220000000000002000000000000000000002000000002
2000000000022000000000022220000000000002200000000000002000000000010000000001000000001
1000000000001100000000001100000000000001100000000000001000000000011111111111000000001
1000000000000111111111111111110000000000110000000000000100000000000000000000000000001
1000000000000000000000000000000000000001100000000000001000000000000000000000000000001
1000000000011110000000000000000000000001111111111111111111111111111111000000000000001
1000000001111111100000000000001111110001100000000000000000000000000000000000000000001
1000011111111111111111100000001001100001100000000000000000000000000000000000000000001
1000000000111111111110000000001001000000000000000000000000111000000000000000000000001
1000000001111111110000000000001000000000000000000000000000011100000000000000000000001
1000000000111110000000000002222222222222222222222222222222222200000000000000000000002
2000000000022000000000000000000000000000222222222222222222222222222222222222000000002
2000000000000000000000000000000000000000000000000000000000022222222222222220000000001
1000000000000000000000000000000000000000000000000000000000000000000000000000000000001
1000000000000000000000000000000000000000000000000000000000000000000000000000000000001
1111111111111111111111111111111111111111111111111111111111111111111111111111111111111
"""
MAP = np.array([
    [int(i) for i in line]
    for line in MAP[1:].splitlines()
])
WHITE_TO_BLUE = cycle(map(
    LightIntensity.from_color,
    gradient(WHITE, BLUE, 10) + gradient(BLUE, WHITE, 10),
))


class MyShadowCaster(ShadowCaster):
    def on_add(self):
        super().on_add()
        self._update_task = asyncio.create_task(self._update())

    def on_remove(self):
        super().on_remove()
        self._update_task.cancel()

    async def _update(self):
        while True:
            self.light_sources[0].intensity = next(WHITE_TO_BLUE)
            self.cast_shadows()
            await asyncio.sleep(0)

    def on_mouse(self, mouse_event):
        if (
            mouse_event.event_type is MouseEventType.MOUSE_MOVE
            and self.collides_point(mouse_event.position)
        ):
            self.light_sources[0].coords = self.to_map_coords(self.to_local(mouse_event.position))

    def on_key(self, key_event):
        y, x = self.camera.pos

        match key_event.key:
            case "up":
                self.camera.pos = Point(y - 1, x)
            case "down":
                self.camera.pos = Point(y + 1, x)
            case "left":
                self.camera.pos = Point(y, x - 1)
            case "right":
                self.camera.pos = Point(y, x + 1)
            case _:
                return False

        return True


run_widget_as_app(
    MyShadowCaster(
        size_hint=(1.0, 1.0),
        map=MAP,
        camera=Camera((0, 0), (50, 50)),
        tile_colors=[AGRAY, ACYAN, AMAGENTA],
        light_sources=[LightSource()],
        ambient_light=.1,
        radius=40,
    )
)
